#  NOTE(koekeishiya): A list of all built-in modifier and literal keywords can
#                     be found at https://github.com/koekeishiya/skhd/issues/1
#
#                     A hotkey is written according to the following rules:
#
#                       hotkey       = <mode> '<' <action> | <action>
#
#                       mode         = 'name of mode' | <mode> ',' <mode>
#
#                       action       = <keysym> '[' <proc_map_lst> ']' | <keysym> '->' '[' <proc_map_lst> ']'
#                                      <keysym> ':' <command>          | <keysym> '->' ':' <command>
#                                      <keysym> ';' <mode>             | <keysym> '->' ';' <mode>
#
#                       keysym       = <mod> '-' <key> | <key>
#
#                       mod          = 'modifier keyword' | <mod> '+' <mod>
#
#                       key          = <literal> | <keycode>
#
#                       literal      = 'single letter or built-in keyword'
#
#                       keycode      = 'apple keyboard kVK_<Key> values (0x3C)'
#
#                       proc_map_lst = * <proc_map>
#
#                       proc_map     = <string> ':' <command> | <string>     '~' |
#                                      '*'      ':' <command> | '*'          '~'
#
#                       string       = '"' 'sequence of characters' '"'
#
#                       command      = command is executed through '$SHELL -c' and
#                                      follows valid shell syntax. if the $SHELL environment
#                                      variable is not set, it will default to '/bin/bash'.
#                                      when bash is used, the ';' delimeter can be specified
#                                      to chain commands.
#
#                                      to allow a command to extend into multiple lines,
#                                      prepend '\' at the end of the previous line.
#
#                                      an EOL character signifies the end of the bind.
#
#                       ->           = keypress is not consumed by skhd
#
#                       *            = matches every application not specified in <proc_map_lst>
#
#                       ~            = application is unbound and keypress is forwarded per usual, when specified in a <proc_map>
#
#  NOTE(koekeishiya): A mode is declared according to the following rules:
#
#                       mode_decl = '::' <name> '@' ':' <command> | '::' <name> ':' <command> |
#                                   '::' <name> '@'               | '::' <name>
#
#                       name      = desired name for this mode,
#
#                       @         = capture keypresses regardless of being bound to an action
#
#                       command   = command is executed through '$SHELL -c' and
#                                   follows valid shell syntax. if the $SHELL environment
#                                   variable is not set, it will default to '/bin/bash'.
#                                   when bash is used, the ';' delimeter can be specified
#                                   to chain commands.
#
#                                   to allow a command to extend into multiple lines,
#                                   prepend '\' at the end of the previous line.
#
#                                   an EOL character signifies the end of the bind.

# Focus
# Desktop
cmd + alt - 1 : yabai -m space --focus 1
cmd + alt - 2 : yabai -m space --focus 2
cmd + alt - 3 : yabai -m space --focus 3
cmd + alt - 4 : yabai -m space --focus 4
cmd + alt - 5 : yabai -m space --focus 5
cmd + alt - 6 : yabai -m space --focus 6
cmd + alt - 7 : yabai -m space --focus 7
cmd + alt - 8 : yabai -m space --focus 8
cmd + alt - 9 : yabai -m space --focus 9


# Displays
cmd + alt - left  :  yabai -m display --focus west
cmd + alt - down  :  yabai -m display --focus south
cmd + alt - up    :  yabai -m display --focus north
cmd + alt - right :  yabai -m display --focus east

# Panes / Windows
cmd + alt - h : yabai -m window --focus west
cmd + alt - j : yabai -m window --focus south
cmd + alt - k : yabai -m window --focus north
cmd + alt - l : yabai -m window --focus east

# Moving
# Desktop
ctrl + cmd + alt - 1 : yabai -m window --space 1; yabai -m space --focus 1
ctrl + cmd + alt - 2 : yabai -m window --space 2; yabai -m space --focus 2
ctrl + cmd + alt - 3 : yabai -m window --space 3; yabai -m space --focus 3
ctrl + cmd + alt - 4 : yabai -m window --space 4; yabai -m space --focus 4
ctrl + cmd + alt - 5 : yabai -m window --space 5; yabai -m space --focus 5
ctrl + cmd + alt - 6 : yabai -m window --space 6; yabai -m space --focus 6
ctrl + cmd + alt - 7 : yabai -m window --space 7; yabai -m space --focus 7
ctrl + cmd + alt - 8 : yabai -m window --space 8; yabai -m space --focus 8
ctrl + cmd + alt - 9 : yabai -m window --space 9; yabai -m space --focus 9

# Displays
ctrl + cmd + alt - left   : yabai -m window --display west  ; yabai -m display --focus west
ctrl + cmd + alt - down   : yabai -m window --display south ; yabai -m display --focus south
ctrl + cmd + alt - up     : yabai -m window --display north ; yabai -m display --focus north
ctrl + cmd + alt - right  : yabai -m window --display east  ; yabai -m display --focus east

# Panes
ctrl + cmd + alt - h : yabai -m window --warp west
ctrl + cmd + alt - j : yabai -m window --warp south
ctrl + cmd + alt - k : yabai -m window --warp north
ctrl + cmd + alt - l : yabai -m window --warp east

# Resize Panes / Windows
ctrl + alt - h : yabai -m window --resize left:-50:0; \
                  yabai -m window --resize right:-50:0
ctrl + alt - j : yabai -m window --resize bottom:0:50; \
                  yabai -m window --resize top:0:50
ctrl + alt - k : yabai -m window --resize top:0:-50; \
                  yabai -m window --resize bottom:0:-50
ctrl + alt - l : yabai -m window --resize right:50:0; \
                  yabai -m window --resize left:50:0

# Equalize size of windows
# ctrl + alt - =
ctrl + alt - 0x18 : yabai -m space --balance

# Enable / Disable gaps in current workspace
cmd + alt - g : yabai -m space --toggle padding; yabai -m space --toggle gap

# Rotate windows clockwise and anticlockwise
ctrl + cmd + alt - 0x1E : yabai -m space --rotate 270
ctrl + cmd + alt - 0x21 : yabai -m space --rotate 90

# Rotate on X and Y Axis
shift + alt - x : yabai -m space --mirror x-axis
shift + alt - y : yabai -m space --mirror y-axis

# Set insertion point for focused container
shift + ctrl + alt - h : yabai -m window --insert west
shift + ctrl + alt - j : yabai -m window --insert south
shift + ctrl + alt - k : yabai -m window --insert north
shift + ctrl + alt - l : yabai -m window --insert east

# Float / Unfloat current window
cmd + alt - space : \
    yabai -m window --toggle float; \
    yabai -m window --toggle border;

# Float / Unfloat current window
cmd + alt - s : \
    yabai -m window --toggle float; \
    yabai -m window --toggle topmost; \
    yabai -m window --toggle border;

# Make window native fullscreen
cmd + alt - f         : yabai -m window --toggle zoom-fullscreen
shift + alt - f : yabai -m window --toggle native-fullscreen

cmd + alt - t         : touch /tmp/skhd-touch
