snippet template "Basic template" b
\documentclass[a4paper]{article}

\usepackage[utf8]{inputenc}
\usepackage[T1]{fontenc}
\usepackage{textcomp}
\usepackage{listings}
\usepackage{graphicx}
\usepackage{amsmath}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsthm}
\usepackage{hyperref}
\usepackage[T1]{fontenc}
\usepackage{color}
\usepackage{mathtools}
\usepackage{comment}
\usepackage{stmaryrd}
\usepackage{subcaption}
\usepackage{multirow}


\title{${1:Title}}
\author{${2:Victor Quach}}
\date{}

\begin{document}
	${0:${VISUAL}}
\end{document}
endsnippet

snippet pac "Package" b
\usepackage[${1:options}]{${2:package}}$0
endsnippet

snippet => "implies" Ai
\implies
endsnippet

snippet iff "iff" i
\iff
endsnippet

##############
# MATH STUFF #
##############

snippet mm "Math" wA
$${1:${VISUAL}}$`!p
punctuation = t[2] and t[2][0] in [',', '.', '?']
if punctuation:
	if len(t[2]) == 1:
		t[2] = t[2] + ' '
	snip.rv='' 
else:
	snip.rv=' '
`$2
endsnippet

snippet dm "Math" wA
\[
${1:${VISUAL}}
\] $0
endsnippet

snippet eq "Equation" b
\begin{equation}
	$0
\end{equation}
endsnippet

snippet eqnn "Equation without number" b
\begin{equation*}
	$0
\end{equation*}
endsnippet

snippet al "Align" b
\begin{align*}
	${1:${VISUAL}}
\end{align*}
$0
endsnippet

snippet ali "Align" bA
\begin{align*}
	${1:${VISUAL}}
\end{align*}
$0
endsnippet

snippet ar "Array" b
\begin{array*}{${1:rl}}
	${2:} &= $3\\\\
\end{array*}
endsnippet


#snippet // "Fraction" iA
#\\frac{$1}{$2}$0
#endsnippet

#snippet f/ "Fraction" iA
#\\frac{$1}{$2}$0
#endsnippet

#priority 1000
#snippet '((\d+)?(\\)?([A-Za-z]+)(\^((\{\d+\})|(\d)))?)/' "symbol frac" wrA
#\\frac{`!p snip.rv = match.group(1)`}{$1}$0
#endsnippet


#priority 10
#snippet '(\d+)/' "number frac" wrA
#\\frac{`!p snip.rv = match.group(1)`}{$1}$0
#endsnippet

#snippet '^.*\)/' "() frac" wra
#`!p
#stripped = match.string[:-1]
#depth = 0
#i = len(stripped) - 1
#while True:
	#if stripped[i] == ')': depth += 1
	#if stripped[i] == '(': depth -= 1
	#if depth == 0: break;
	#i-=1
#snip.rv = stripped[0:i] + "\\frac{" + stripped[i+1:-1] + "}"
#`{$1}$0
#endsnippet

snippet sympy "sympyblock " b
sympy $1 sympy$0
endsnippet

snippet 'sympy(.*)sympy' "sympy" wr
`!p
from sympy import *
x, y, z, t = symbols('x y z t')
k, m, n = symbols('k m n', integer=True)
f, g, h = symbols('f g h', cls=Function)
init_printing()
snip.rv = eval('latex(' + match.group(1).replace('\\', '').replace('^', '**').replace('{', '(').replace('}', ')') + ')')
`
endsnippet


snippet == "equals" iA
 &= $1 \\\\

endsnippet


snippet ceil "ceil" iA
\left\lceil $1 \right\rceil $0
endsnippet

snippet floor "floor" iA
\left\lfloor $1 \right\rfloor$0
endsnippet

snippet mat "Smart Matrix"
\begin{${1:p/b/v/V/B/small}matrix}
	$0
\end{$1matrix}
endsnippet

snippet pmat "pmat" iA
\begin{pmatrix}
	$1
\end{pmatrix}
$0
endsnippet

snippet bmat "bmat" iA
\begin{bmatrix}
	$1
\end{bmatrix}
$0
endsnippet

snippet () "left( right)" iA
\left( ${1:${VISUAL}} \right) $0
endsnippet

snippet lr "left( right)" i
\left( ${1:${VISUAL}} \right) $0
endsnippet

snippet lr( "left( right)" i
\left( ${1:${VISUAL}} \right) $0
endsnippet

snippet lr| "left| right|" i
\left| ${1:${VISUAL}} \right| $0
endsnippet

snippet lr{ "left\{ right\}" i
\left\\{ ${1:${VISUAL}} \right\\} $0
endsnippet

snippet lrb "left\{ right\}" i
\left\\{ ${1:${VISUAL}} \right\\} $0
endsnippet

snippet lr[ "left[ right]" i
\left[ ${1:${VISUAL}} \right] $0
endsnippet

snippet norm "norm" i
\left\lVert ${1:${VISUAL}} \right\rVert $0
endsnippet

snippet lra "leftangle rightangle" i
\left<${1:${VISUAL}} \right>$0
endsnippet

snippet dint "integral" w
\int_{${1:-\infty}}^{${2:\infty}} ${3:${VISUAL}}\: d${4:x} $0
endsnippet

snippet int "integral" w
\int ${1:${VISUAL}}\: d${2:x} $0
endsnippet

snippet sum "sum" w
\sum_{${1:k=${2:1}}}^{${3:\infty}} ${4:${VISUAL}} $0
endsnippet

snippet taylor "taylor" w
\sum_{${1:k}=${2:0}}^{${3:\infty}} ${4:c_$1} (x-a)^$1 $0
endsnippet

snippet lim "limit" w
\lim_{${1:n}\to${2:\infty}} 
endsnippet

snippet prod "product" w
\prod_{${1:n=${2:1}}}^{${3:\infty}} ${4:${VISUAL}} $0
endsnippet


snippet ddx "d/dx" wA
\frac{d${1:}}{dx} $0
endsnippet

snippet ddt "d/dt" wA
\frac{d${1:}}{dt} $0
endsnippet

snippet part "d/dx" w
\frac{\partial ${1:}}{\partial ${2:x}} $0
endsnippet

snippet sq "\sqrt{}" wA
\sqrt{${1:${VISUAL}}} $0
endsnippet

snippet sr "^2" iA
^2
endsnippet

snippet cb "^3" iA
^3
endsnippet

snippet td "to the ... power" iA
^{$1}$0
endsnippet

snippet __ "subscript" iA
_{$1}$0
endsnippet

snippet ooo "\infty" iA
\infty
endsnippet

snippet rij "mrij" i
(${1:x}_${2:n})_{${3:$2}\\in${4:\\N}}$0
endsnippet

snippet <= "leq" iA
\le 
endsnippet

snippet >= "geq" iA
\ge 
endsnippet

snippet EE "geq" iA
\exists 
endsnippet

snippet xnn "xn" iA
x_{n}
endsnippet

snippet ynn "yn" iA
y_{n}
endsnippet


snippet xii "xi" iA
x_{i}
endsnippet

snippet yii "yi" iA
y_{i}
endsnippet

snippet xjj "xj" iA
x_{j}
endsnippet

snippet yjj "yj" iA
y_{j}
endsnippet

snippet xp1 "x" iA
x_{n+1}
endsnippet

snippet n0 "x" iA
n_{0}
endsnippet

snippet xmm "x" iA
x_{m}
endsnippet

snippet AA "forall" iA
\forall 
endsnippet

snippet R0+ "R0+" iA
\\R_0^+
endsnippet

snippet plot "Plot" w
\begin{figure}[$1]
	\centering
	\begin{tikzpicture}
		\begin{axis}[
			xmin= ${2:-10}, xmax= ${3:10},
			ymin= ${4:-10}, ymax = ${5:10},
			axis lines = middle,
		]
			\addplot[domain=$2:$3, samples=${6:100}]{$7};
		\end{axis}
	\end{tikzpicture}
	\caption{$8}
	\label{${9:$8}}
\end{figure}
endsnippet

snippet nn "Tikz node" w
\node[$5] (${1/[^0-9a-zA-Z]//g}${2}) ${3:at (${4:0,0}) }{$${1}$};
$0
endsnippet

snippet dr "Tikz draw" w
\draw[${1}] (${2:0, 0}) -- $4(${3:0,0});
$0
endsnippet

snippet na "Tikz node above" w
node[above`!p snip.rv=', ' if t[2] else ''`${2}]{$${1}$} $0
endsnippet

snippet nb "Tikz node below" w
node[below`!p snip.rv=', ' if t[2] else ''`${2}]{$${1}$} $0
endsnippet

snippet nr "Tikz node right" w
node[right`!p snip.rv=', ' if t[2] else ''`${2}]{$${1}$} $0
endsnippet

snippet nl "Tikz node left" w
node[left`!p snip.rv=', ' if t[2] else ''`${2}]{$${1}$} $0
endsnippet

snippet nar "Tikz node above right" w
node[above right`!p snip.rv=', ' if t[2] else ''`${2}]{$${1}$} $0
endsnippet

snippet nal "Tikz node above left" w
node[above left`!p snip.rv=', ' if t[2] else ''`${2}]{$${1}$} $0
endsnippet

snippet nbr "Tikz node below right" w
node[below right`!p snip.rv=', ' if t[2] else ''`${2}]{$${1}$} $0
endsnippet

snippet nbl "Tikz node below left" w
node[below left`!p snip.rv=', ' if t[2] else ''`${2}]{$${1}$} $0
endsnippet

snippet frame "Tikz frame" w
\draw[help lines, <->] (-$1, 0) -- ($1, 0);
\draw[help lines, <->] (0, -$1) -- (0, $1);
$0
endsnippet

snippet force "Tikz force" w
\draw[force] (${1:0, 0}) -- $3 ++(${2:0, 0});
$0
endsnippet

snippet tikz "Tikz" w
\begin{figure}[htb]
	\centering
	\begin{tikzpicture}
		$0
	\end{tikzpicture}
	\caption{$1}
	\label{fig:${2:${1/\\\w+\{(.*?)\}|\\(.)|(\w+)|([^\w\\]+)/(?4:_:\L$1$2$3\E)/ga}}}
\end{figure}
endsnippet


snippet co "Tikz coordinate" w
coordinate ($1) $0
endsnippet

snippet vec "Vector" i
\vec 
endsnippet

snippet mcal "mathcal" iA
\mathcal{$1}$0
endsnippet

snippet unit "unit vector" i
\vec e_{$1}$0
endsnippet

snippet lll "l" iA
\ell
endsnippet

snippet nabl "nabla" iA
\nabla 
endsnippet

snippet xx "cross" iA
\times 
endsnippet

snippet ** "cdot" iA
\cdot 
endsnippet

snippet slide "slide" bA
\begin{slide}{$1}
    $0
\end{slide}
endsnippet

snippet '(?<!\\)formule' "formule" rwA
\formule{$1}{$2}$0
endsnippet


snippet '(?<!\\)arcsin' "sin" rwA
\arcsin 
endsnippet
snippet '(?<!arc)(?<!\\)sin' "sin" rw
\sin 
endsnippet
snippet '(?<!\\)arccos' "cos" rwA
\arccos 
endsnippet
snippet '(?<!arc)(?<!\\)cos' "cos" rwA
\cos 
endsnippet
snippet '(?<!\\)arctan' "tan" rw
\arctan 
endsnippet
snippet '(?<!arc)(?<!\\)tan' "tan" rw
\tan 
endsnippet
snippet '(?<!\\)arccot' "cot" rwA
\arccot 
endsnippet
snippet '(?<!arc)(?<!\\)cot' "cot" rwA
\cot 
endsnippet
snippet '(?<!\\)arccsc' "csc" rwA
\arccsc 
endsnippet
snippet '(?<!arc)(?<!\\)csc' "csc" rwA
\csc 
endsnippet
snippet '(?<!\\)arcsec' "sec" rw
\arcsec 
endsnippet
snippet '(?<!arc)(?<!\\)sec' "sec" rw
\sec 
endsnippet





snippet '(?<!\\)ln' "ln" rw
\ln 
endsnippet

snippet '(?<!\\)exp' "exp" rw
\exp 
endsnippet


snippet '(?<!\\)log' "log" rw
\log 
endsnippet






snippet -> "to" iA
\to 
endsnippet

snippet !> "mapsto" iA
\mapsto 
endsnippet

snippet invs "inverse" iA
^{-1}
endsnippet

snippet CC "kromme" i
\mathcal{C}
endsnippet

snippet LL "laplace" i
\mathcal{L}
endsnippet

snippet HH "hamiltonian" i
\mathcal{H}
endsnippet

snippet FF "overdekking" i
\mathcal{F}
endsnippet

snippet \\\ "setminus" iA
\setminus
endsnippet

snippet >> ">>" iA
\gg
endsnippet

snippet << "<<" iA
\ll
endsnippet

snippet DD "delta" iA
\Delta 
endsnippet

snippet ~~ "~" iA
\sim 
endsnippet

snippet star "star" i
^\star 
endsnippet

snippet set "set" i
\\{$1\\} $0
endsnippet

snippet || "mid" iA
 \mid 
endsnippet

snippet cc "subset" i
\subset 
endsnippet

snippet bol "bol" i
\left(${1:x} - ${2:\delta}, $1 + $2\right) $0
endsnippet

snippet inwend "mathring" i
\mathring 
endsnippet

snippet sluit "overline" i
\overline{$1} $0
endsnippet

snippet notin "not in " iA
\not\in 
endsnippet

snippet inn "in " iA
\in 
endsnippet

snippet fun "function" i
${1:f} :$2 \R \to \R
endsnippet

snippet NN "n" iA
\N
endsnippet

snippet Nn "cap" iA
\cap 
endsnippet

snippet UU "cup" iA
\cup 
endsnippet

snippet OO "emptyset" iA
\O
endsnippet

snippet RR "real" iA
\R
endsnippet

snippet QQ "Q" iA
\Q
endsnippet

snippet ZZ "Z" iA
\Z
endsnippet

# vim:ft=snippets

